print("Hello World!")
print("Hello World!")
getwd()
setwd("/Users/randhirprem/Desktop/r-projects-advance")
getwd()
library(ggplot2)
x - > 5:7
x <- 5:7
y <- 8:10
plot(x,y)
plot(lynx)
# example of oa plot with title colour, title magnification
plot(lynx, main="Lynx Trappings", col="red", col.main=52, cex.main=1.5)
#label names
plot(lynx,ylab= "Lynx Trappings", xlab="")
plot(lynx,ylab= "Lynx Trappings", xlab="", las=2)
#las - 0:3, scale oreientation
par(mfrow=c(2,2), col.axis="red")
plot(1:8, las=0 , xlab="xlab", ylab="ylab", main="LAS = 0")
plot(1:8, las=1 , xlab="xlab", ylab="ylab", main="LAS = 1")
plot(1:8, las=2 , xlab="xlab", ylab="ylab", main="LAS = 2")
plot(1:8, las=3 , xlab="xlab", ylab="ylab", main="LAS = 3")
#COLOUR MANIPULATION
colors()
?pch
x=2:4
plot(x,pch="c")
plot(x,pch=13)
#line types"
par(mfrow=c(1,1),col.axis="black")
library(plotrix)
install.packages("plotrix")
library(plotrix)
ablineclip(v1=1, lty=1, col"sienna2", lwd=2)
ablineclip(v=1, lty=1, col"sienna2", lwd=2)
plot(1:7, ylab="", main"Line Types lty 0:6", xlab="lty 0:6")
#line types"
par(mfrow=c(1,1),col.axis="black")
library(plotrix)
plot(1:7, ylab="", main"Line Types lty 0:6", xlab="lty 0:6")
#line types"
par(mfrow=c(1,1),col.axis="black")
plot(1:7, ylab="", main"Line Types lty 0:6", xlab="lty 0:6")
plot(x,y,col="green", pch=20, main="Lengthof\nMajor N.American Rivers",col.main="red",xlab="",ylab="length in miles")
x = 1:141
y=rivers
x = 1:141
y=rivers
plot(x,y,col="green", pch=20, main="Lengthof\nMajor N.American Rivers",col.main="red",xlab="",ylab="length in miles")
getwd()
read.csv("SearchResults.csv")
#The Apply family of functions
?apply
x = matrix(c(1:9), nr=3, byrow=T)
apply(x,1,mean)
apply(x,2,mean)
apply(x,1,plot)
#Tapply
?tapply
tapply(1:4,c(3,3,3,3),sum,simplify = F)
#exercise test for normality
libary("ggplot2")
#exercise test for normality
libary("ggplot")
#exercise test for normality
head(diamonds)
attach(diamonds)
qqnorm(depth)
hist(depth)
depthsmall = sample(depth,5000)
shapiro.test(depthsmall)
library(nortest)
install.packages(c("nortestARMA", "nortest"))
library(nortest)
cvm.test(depth)
lillie.test(depth)
sf.test(depth)
sf.test(depthsmall)
pearson.test(depth)
